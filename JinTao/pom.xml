<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- SpringBoot将常用的jar包进行统一的封装，
	只要项目使用parent标签引入springBoot的jar包 ，
	则自动的将封装好的jar包引入-->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<!-- 定义当前项目的坐标 -->
	<groupId>com.jt</groupId>
	<artifactId>JinTao</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>JinTao</name>
	<description>Demo project for Spring Boot</description>
	<!-- JDK -->
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<!-- 表示依赖项 jar包文件-->
	<dependencies>
	<!-- SpringBoot优势:配置文件几乎不写  SpringMVC 
	springBoot针对不同的框架有不同的jar包的支持
	如果见到springBoot的spring-boot-starter-web等，已经将配置信息封装-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
	</dependencies>
	<!-- maven生成jar包需要添加的依赖项 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
